name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/docker
          ~/.docker/cache
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.19.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Build Docker image
      run: |
        docker-compose up -d  .

    - name: Run tests
      run: |
        # Execute the container in the background and run curl on it
        docker run -d --name myapp -p 5000:5000 myapp:latest
        # Wait for the service to start up
        sleep 10
        # Test the API
        docker run --rm curlimages/curl:latest curl -sv http://localhost:5000/api/comment/list/1
        # Stop the app container
        docker stop myapp

    - name: Push Docker image
      if: github.event_name == 'push'
      run: |
        echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
        docker tag myapp:latest ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:latest

    - name: Notify success
      if: success()
      run: echo "Deploy realizado com sucesso!"
